.data
	str: .space 20		# 20 char

.text
	li	$v0, 5
	syscall
	move	$s0, $v0	# $s0 = n
	
# input module
	li	$t0, 0		# $t0 = i	
for_1_begin:
	slt	$t2, $t0, $s0	# i < n
	beq	$t2, $0, for_1_end
	nop
	
	li	$v0, 12		# read a char (without '\n'?)
	syscall
	sb	$v0, str($t0)
	
	addi	$t0, $t0, 1	# i++
	j	for_1_begin
	nop
	
for_1_end:
# process
	move	$t1, $t0	# $t1 = j, j is rear
	addi	$t1, $t1, -1	# offset = rear - 1
	li	$t0, 0		# i = 0, j = rear
	
for_2_begin:
	slt	$t2, $t0, $t1
	beq	$t2, $0, for_2_end
	nop
	
	lb	$t3, str($t0)	# $t3 is head
	lb	$t4, str($t1)	# $t4 is rear
	
	bne	$t3, $t4, if_1_else	# if (s[i] != s[j])
	nop
	addi	$t0, $t0, 1	# i++
	addi	$t1, $t1, -1	# j--
	j	for_2_begin
	nop
	
if_1_else:
	li	$a0, 0		# failed
	li	$v0, 1
	syscall
	
	li	$v0, 10
	syscall			# end

for_2_end:
	li	$a0, 1		# success
	li	$v0, 1
	syscall
	
	li	$v0, 10
	syscall
