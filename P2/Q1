.data
	array_a: .space 256	# 8 * 8 * 4 = 256
	array_b: .space 256
	array_c: .space 256
	str_space: .asciiz " "
	str_enter: .asciiz "\n"
	
# index = ((i * 8) + j) * 4
.macro	getindex(%ans, %i, %j)
	sll	%ans, %i, 3	# %i * 8
	add	%ans, %ans, %j
	sll	%ans, %ans, 2		# *4
.end_macro

.text
	li	$v0, 5		# get input n
	syscall
	move	$s0, $v0	# $s0 = n
	li	$t0, 0		# $t0 = i


# get array_a
for_1_begin:
	slt	$t3, $t0, $s0	# i < n
	beq	$t3, $0, for_1_end
	nop
	li	$t1, 0		# $t1 = j
	
for_2_begin:
	slt	$t3, $t1, $s0	# j < n
	beq	$t3, $0, for_2_end
	nop
	
	li	$v0, 5		# get a_ij
	syscall
	getindex($t3, $t0, $t1)
	sw	$v0, array_a($t3)
	addi	$t1, $t1, 1		# j++	
	j	for_2_begin
	nop
	
for_2_end:
	addi	$t0, $t0, 1		# i++
	j	for_1_begin
	nop
for_1_end:
# get array_b
	li	$t0, 0		# $t0 = i

for_3_begin:
	slt	$t3, $t0, $s0	# i < n
	beq	$t3, $0, for_3_end
	nop
	li	$t1, 0		# $t1 = j
	
for_4_begin:
	slt	$t3, $t1, $s0	# j < n
	beq	$t3, $0, for_4_end
	nop
	
	li	$v0, 5		# get b_ij
	syscall
	getindex($t3, $t0, $t1)
	sw	$v0, array_b($t3)
	addi	$t1, $t1, 1		# j++	
	j	for_4_begin
	nop
	
for_4_end:
	addi	$t0, $t0, 1		# i++
	j	for_3_begin
	nop
for_3_end:
# have got array_b
	li	$t0, 0

# caculate
for_i_begin:
	slt	$t3, $t0, $s0		# i < n
	beq	$t3, $0, for_i_end
	nop
	li	$t1, 0			# j = 0

for_j_begin:
	slt	$t3, $t1, $s0		# j < n
	beq	$t3, $0, for_j_end
	nop
	li	$t2, 0			# $t2 = k
	li	$s1, 0			# $s1 = c[i][j]
for_k_begin:
	slt	$t3, $t2, $s0		# k < n
	beq	$t3, $0, for_k_end
	nop
	
	getindex($t3, $t0, $t2)
	lw	$t9, array_a($t3)	# $t9 = a[i][k]
	getindex($t4, $t2, $t1)
	lw	$t8, array_b($t4)	# $t8 = b[k][j]
	
	mult	$t8, $t9
	mflo	$t3
	
	mflo	$t3
	add	$s1, $s1, $t3		# c[i][j] = c[i][j] + a[i][k]*b[k][j]
	
	addi	$t2, $t2, 1		# k++
	j	for_k_begin
	nop
	
for_k_end:
	getindex($t3, $t0, $t1)
	sw	$s1, array_c($t3)	# save value
	addi	$t1, $t1, 1		# j++
	j	for_j_begin
	nop
	
for_j_end:
	addi	$t0, $t0, 1		# i++
	j	for_i_begin
	nop

for_i_end:
# output module
	li	$t0, 0		# initialize i, j
out_1_begin:
	slt	$t3, $t0, $s0	# i < n
	beq	$t3, $0, out_1_end
	nop
	li	$t1, 0		# for j = 0
out_2_begin:
	slt	$t3, $t1, $s0	# j < n
	beq	$t3, $0, out_2_end
	nop
	
	getindex($t3, $t0, $t1)
	lw	$a0, array_c($t3)
	li	$v0, 1
	syscall
	la	$a0, str_space
	li	$v0, 4
	syscall
	
	addi	$t1, $t1, 1		# j++
	j	out_2_begin
	nop
	
out_2_end:
	la	$a0, str_enter
	li	$v0, 4
	syscall
	
	addi	$t0, $t0, 1		# i++
	j	out_1_begin
	nop
out_1_end:
	li	$v0, 10
	syscall
